spring:
  application:
    name: comercial-pereira-backend
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:}

  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:comercial_pereira}
    username: ${DB_USER:comercial_user}
    password: ${DB_PASSWORD:comercial_pass}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      open-in-view: false
      ddl-auto: validate
    # Para desenvolvimento, você pode mudar para 'true' para ver os SQLs gerados
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true

  security:
    jwt:
      secret: ${JWT_SECRET:tnwRVXYmIZIbtBlcEUHS6CtrzatbF0VKPtIOVJo6VsE=}
      expiration: ${JWT_EXPIRATION:900000} # 15 minutos para o access token
      refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000} # 7 dias para o refresh token

  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USER:}
    password: ${MAIL_PASS:}
    properties:
      mail:
        smtp:
          starttls:
            enable: true
          auth: true

logging:
  level:
    br.com.comercialpereira: DEBUG
    org.springframework.security: DEBUG
    # Para desenvolvimento, você pode descomentar a linha abaixo
    # org.hibernate.SQL: DEBUG

management:
  health:
    mail:
      enabled: false
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized

# Configurações customizadas
comercial:
  business:
    cnpj: "00.009.295/0001-67"
    name: "Comercial Pereira José Leandro Cassiano Pereira"
    min-stock-alert-days: 7
    max-file-size: 10MB

  cache:
    ttl:
      products: 300 # 5 minutos
      categories: 600 # 10 minutos
      customers: 180 # 3 minutos